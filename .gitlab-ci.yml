variables:
    PHP_VERSION: '7.4'
    NODE_VERSION: 18.18.1
    MYSQL_DATABASE: test-wordpress
    MYSQL_HOST: mysql
    MYSQL_USER: test
    MYSQL_PASSWORD: password
    MYSQL_ROOT_PASSWORD: password

.script_install_composer: &script_install_composer
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

.script_install_npm: &script_install_npm
    - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.1/install.sh | bash
    - source ~/.bashrc
    - nvm install && nvm use

default:
    cache: &global_cache
        key: $CI_COMMIT_REF_SLUG
        paths:
            - vendor/
            - node_modules/
            - build/
        policy: pull-push

stages:
    - validate
    - code-quality
    - build
    - test
    - zip
    - upload
    - release

validate-composer:
    image: composer:2
    stage: validate
    cache: []
    script:
        - composer --no-ansi validate

lint-php:
    image: wordpress:php$PHP_VERSION
    stage: code-quality
    cache:
        <<: *global_cache
        policy: push
    before_script:
        - *script_install_composer
        - composer install --no-ansi --no-interaction --no-progress --prefer-dist
    script:
        - composer run lint:gitlab

lint-js-css:
    image: wordpress:php$PHP_VERSION
    stage: code-quality
    cache:
        <<: *global_cache
        policy: push
    before_script:
        - *script_install_npm
        - npm ci
    script:
        - npm run lint:js
        - npm run lint:css

build-job:
    image: wordpress:php$PHP_VERSION
    stage: build
    before_script:
        - *script_install_npm
        - *script_install_composer
    script:
        - npm run build

test-job:
    image: wordpress:php$PHP_VERSION
    stage: test
    services:
        - mysql
    variables:
        WORDPRESS_DB_USER: $MYSQL_USER
        WORDPRESS_DB_PASSWORD: $MYSQL_PASSWORD
        WORDPRESS_DB_NAME: $MYSQL_DATABASE
        WORDPRESS_DB_HOST: $MYSQL_HOST
        WORDPRESS_TEST_VERSION: latest
    cache:
        <<: *global_cache
        policy: pull
    before_script: *script_install_composer
    script:
        - apt-get update -y && apt-get install -y subversion default-mysql-client
        - curl https://raw.githubusercontent.com/wp-cli/scaffold-command/master/templates/install-wp-tests.sh -o /bin/install-wp-tests.sh
        - chmod +x /bin/*.sh
        - bash /bin/install-wp-tests.sh $WORDPRESS_DB_NAME $WORDPRESS_DB_USER $WORDPRESS_DB_PASSWORD $WORDPRESS_DB_HOST $WORDPRESS_TEST_VERSION true
        - composer run test-integration:gitlab

zip-job:
    image: wordpress:php$PHP_VERSION
    stage: zip
    cache:
        <<: *global_cache
        policy: pull
    before_script:
        - *script_install_composer
        - composer install --optimize-autoloader --no-dev
        - apt-get update -y && apt-get install -y zip
    script:
        - curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
        - chmod +x wp-cli.phar
        - php wp-cli.phar package install wp-cli/dist-archive-command --allow-root
        - composer run make-zip
    artifacts:
        paths:
            - kudos-donations.zip
        expire_in: 1 week
    only:
        - tags

upload-zip:
    image: curlimages/curl:latest
    stage: upload
    cache: []
    script:
        - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file kudos-donations.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/kudos-donations/${CI_COMMIT_TAG}/kudos-donations.zip"'
    only:
        - tags

release-job:
    image: registry.gitlab.com/gitlab-org/release-cli:latest
    stage: release
    cache: []
    script:
        - echo "Running the release job."
    release:
        name: 'Release $CI_COMMIT_TAG'
        tag_name: $CI_COMMIT_TAG
        description: $CI_COMMIT_TAG_MESSAGE
        assets:
            links:
                - name: 'kudos-donations.zip'
                  url: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/kudos-donations/${CI_COMMIT_TAG}/kudos-donations.zip
    only:
        - tags