name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PHP_VERSION: '7.4'
  NODE_VERSION: '18.18.1'

jobs:
  validate-composer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer
      - name: Validate Composer configuration
        run: composer --no-ansi validate

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer

      - name: Lint PHP
        run: |
          composer install --no-ansi --no-interaction --no-progress --prefer-dist
          composer run lint

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Lint JavaScript and CSS
        run: |
          npm ci
          npm run lint:js
          npm run lint:css

  build-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build front-end assets
        run: npm run build

      - name: Upload build folder
        uses: actions/upload-artifact@v4
        with:
          name: build-folder
          path: ./build

  test-job:
    runs-on: ubuntu-latest
    needs: build-job
    services:
      mysql:
        image: mysql:9.1
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: wordpress_test
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:   
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build folder
        uses: actions/download-artifact@v4
        with:
          name: build-folder

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
        
      - name: Set up PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer

      - name: Install dependencies
        run: |
          npm ci
          composer install --no-ansi --no-interaction --no-progress --prefer-dist

      - name: Install subversion
        run: sudo apt-get update -y && sudo apt-get install -y subversion

      - name: Install tests
        run: |
          sudo curl https://raw.githubusercontent.com/wp-cli/scaffold-command/master/templates/install-wp-tests.sh -o /bin/install-wp-tests.sh
          sudo chmod +x /bin/*.sh
          bash /bin/install-wp-tests.sh wordpress_test root root 127.0.0.1:${{ job.services.mysql.ports['3306'] }} latest true

      - name: Run tests
        run: vendor/bin/phpunit --do-not-cache-result

  zip-job:
    needs: test-job
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build folder
        uses: actions/download-artifact@v4
        with:
          name: build-folder
  
      - name: Set up PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer

      - name: Install dependencies
        run: composer install --optimize-autoloader --no-dev

      - name: Create zip archive
        run: |
          curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
          chmod +x wp-cli.phar
          php wp-cli.phar package install wp-cli/dist-archive-command --allow-root
          composer run make-zip

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: kudos-donations
          path: kudos-donations.zip

  # release-job:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Create GitHub release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: kudos-donations.zip
