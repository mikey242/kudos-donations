name: PHP Composer

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  PHP_VERSION: '7.4'
  NODE_VERSION: '18.18.1'
  MARIADB_INITDB_SKIP_TZINFO: 1
  MYSQL_DATABASE: wordpress_test
  MYSQL_HOST: 127.0.0.1
  MYSQL_USER: wordpress
  MYSQL_PASSWORD: wordpress
  MYSQL_ROOT_PASSWORD: root

jobs:
  validate-composer:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer
      - name: Validate Composer configuration
        run: composer --no-ansi validate

  lint-php:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer
      - name: Install Composer dependencies
        run: composer install --no-ansi --no-interaction --no-progress --prefer-dist
      - name: Run PHP linting
        run: composer run lint:gitlab

  lint-js-css:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Lint JavaScript and CSS
        run: |
          npm run lint:js
          npm run lint:css

  test-job:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        ports:
          - '3306:3306'
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup node 
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
        
      - name: Set up PHP with Composer
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer

      - name: Install dependencies
        run: |
          npm ci
          composer install --no-ansi --no-interaction --no-progress --prefer-dist

      - name: Build front-end assets
        run: npm run build

      - name: Install tests
        run: |
          sudo apt list subversion
          sudo apt-get update -y && sudo apt-get install -y subversion default-mysql-client
          sudo curl https://raw.githubusercontent.com/wp-cli/scaffold-command/master/templates/install-wp-tests.sh -o /bin/install-wp-tests.sh
          sudo chmod +x /bin/*.sh
          bash /bin/install-wp-tests.sh ${{ env.MYSQL_DATABASE }} root root ${{ env.MYSQL_HOST }} latest true

      - name: Run tests
        run: vendor/bin/phpunit --do-not-cache-result

      - name: Upload build folder
        uses: actions/upload-artifact@v4
        with:
          name: build-folder
          path: ./build

  # zip-job:
  #   needs: test-job
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

      # - name: Download build folder
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: build-folder
  
  #     - name: Set up PHP with Composer
  #       uses: shivammathur/setup-php@v2
  #       with:
  #         php-version: ${{ env.PHP_VERSION }}
  #         tools: composer
  #     - name: Install dependencies
  #       run: composer install --optimize-autoloader --no-dev
  #     - name: Create zip archive
  #       run: |
  #         curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
  #         chmod +x wp-cli.phar
  #         php wp-cli.phar package install wp-cli/dist-archive-command --allow-root
  #         composer run make-zip
  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: kudos-donations.zip
  #         path: kudos-donations.zip

  # release-job:
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Create GitHub release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         files: kudos-donations.zip
